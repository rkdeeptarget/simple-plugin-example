{"version":3,"sources":["src/messages/message.js","src/post-message.js","src/messages/click-link.js","src/messages/request-resize.js","src/router.js","src/index.js","src/namespace.js"],"names":["Message","constructor","type","NS","ANDROID","IOS","port","portListener","event","ports","window","removeEventListener","addEventListener","postUniversalMessage","message","postMessage","JSON","stringify","webkit","messageHandlers","parent","ClickLink","href","external","data","RequestResize","height","LINK_TARGET_TYPE","SAME_WINDOW","NEW_WINDOW","clickEventHandler","targetType","which","button","metaKey","ctrlKey","shiftKey","defaultPrevented","eventTarget","target","nodeName","composedPath","i","length","el","hasAttribute","getAttribute","link","pathname","location","hash","protocol","test","linkTarget","toUpperCase","fullUrl","URL","messageSent","toString","preventDefault","MESSAGES","REQUEST_CLOSE","REQUEST_SYNC","REQUEST_REFRESH","PING","READY","ping","handleClick","e","detail","originalEvent","top","document","onActivity_","passive","onFocus_","hidden","EventDispatcher","listeners","eventName","callback","concat","filter","cb","dispatchEvent","forEach","listener","host","CustomEvent","ext","requestClose","requestSync","ready","requestResize","HOST_EVENTS","HISTORY_BACK","HISTORY_FORWARD","enableRouter"],"mappings":"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","file":"dist/banno-plugin-framework-bridge.js","sourcesContent":["export default class Message {\n  /** @param {string} type */\n  constructor(type) {\n    /** @type {string} */\n    this.type = type;\n  }\n}\n","// eslint-disable-next-line no-unused-vars\nimport Message from './messages/message.js';\n\nconst NS = {\n  ANDROID: 'bannoAndroidBridge',\n  IOS: 'bannoIOSBridge',\n};\n\n// Android will pass us a port that we should use to send messages\nlet port;\nfunction portListener(event) {\n  if (event.ports && event.ports[0]) {\n    [port] = event.ports;\n    window.removeEventListener('message', portListener);\n  }\n}\nwindow.addEventListener('message', portListener);\n\n/**\n * post a message to the host application\n * @param {Message} message\n * @return {boolean} message sent flag\n */\nfunction postUniversalMessage(message) {\n  // if modern Android, we should have a port.\n  // if legacy Android, we should have a 'bannoAndroidBridge' namespace.\n  // if iOS, we should have a webkit.messageHandlers.bannoBridge namespace.\n  // for browsers, use regular postMessage.\n  if (port) {\n    port.postMessage(JSON.stringify(message));\n  } else if (window[NS.ANDROID] && window[NS.ANDROID].postMessage) {\n    window[NS.ANDROID].postMessage(JSON.stringify(message));\n    // @ts-ignore\n  } else if (window.webkit && window.webkit.messageHandlers[NS.IOS]) {\n    // @ts-ignore\n    window.webkit.messageHandlers[NS.IOS].postMessage(message);\n  } else if (window.parent !== window) {\n    window.parent.postMessage(message, '*');\n  } else {\n    return false;\n  }\n  return true;\n}\n\n/**\n * post a message that expects a return response. host must attach id to response.\n * @param {Message} message\n * @param {number} [wait=1000] - time in ms to wait for a response\n * @return {Promise<Message>}\n */\nfunction postAsyncMessage(message, wait = 1000) {\n  return new Promise((resolve, reject) => {\n    const id = String(Math.random() * 100000);\n    const timeout = setTimeout(() => {\n      reject(message);\n    }, wait);\n    const responder = event => {\n      if (event.data.id === id) {\n        clearTimeout(timeout);\n        resolve(event.data);\n        window.removeEventListener('message', responder);\n      }\n    };\n    window.addEventListener('message', responder);\n    postUniversalMessage(/** @type {!Message} */ ({ id, ...message }));\n  });\n}\n\nexport { postUniversalMessage, postAsyncMessage };\n","import Message from './message.js';\n\nexport default class ClickLink extends Message {\n  /**\n   * @param {string} href\n   * @param {boolean=} external\n   */\n  constructor(href, external = false) {\n    super('click-link');\n    this.data = {\n      href,\n      external,\n    };\n  }\n}\n","import Message from './message.js';\n\nexport default class RequestResize extends Message {\n  /** @param {number} height */\n  constructor(height) {\n    super('request-resize');\n    this.data = {\n      height,\n    };\n  }\n}\n","import ClickLink from './messages/click-link.js';\nimport { postUniversalMessage } from './post-message.js';\n\nconst LINK_TARGET_TYPE = {\n  SAME_WINDOW: 0,\n  NEW_WINDOW: 1,\n};\n\n/** @param {!Event} event */\nfunction clickEventHandler(event) {\n  if (event.type !== 'click') {\n    return;\n  }\n  const e = /** @type {MouseEvent} */ (event);\n  let targetType = LINK_TARGET_TYPE.SAME_WINDOW;\n  if ((e.which === null ? e.button : e.which) !== 1) {\n    // this is a right or middle click - don't do anything\n    return;\n  }\n  if (e.metaKey || e.ctrlKey || e.shiftKey) {\n    targetType = LINK_TARGET_TYPE.NEW_WINDOW;\n  }\n\n  if (e.defaultPrevented) {\n    return;\n  }\n\n  // ensure link\n  // use shadow dom when available\n  let eventTarget = /** @type {HTMLElement} */ (e.target);\n  if (eventTarget.nodeName !== 'A') {\n    const composedPath = e.composedPath();\n    for (let i = 0; i < composedPath.length; i += 1) {\n      eventTarget = /** @type {HTMLElement} */ (composedPath[i]);\n      if (eventTarget.nodeName === 'A') {\n        break;\n      }\n    }\n  }\n\n  if (!eventTarget || eventTarget.nodeName !== 'A') {\n    return;\n  }\n  const el = /** @type {HTMLAnchorElement} */ (eventTarget);\n\n  // Ignore if tag has\n  // 1. \"download\" attribute\n  // 2. rel=\"external\" attribute\n  if (el.hasAttribute('download') || el.getAttribute('rel') === 'external') {\n    return;\n  }\n\n  // ensure a href exists and non-hash for the same path\n  const link = el.getAttribute('href');\n  if (\n    !link ||\n    ((el.pathname === window.location.pathname || el.pathname === '') && (el.hash || link === '#'))\n  ) {\n    return;\n  }\n\n  // Check for mailto: in the href\n  if (el.protocol && el.protocol.length > 0 && !/^https?:$/.test(el.protocol)) {\n    return;\n  }\n\n  // check target\n  const linkTarget = el.target ? el.target.toUpperCase() : null;\n  if (linkTarget === '_BLANK') {\n    targetType = LINK_TARGET_TYPE.NEW_WINDOW;\n  } else if (linkTarget !== '_TOP') {\n    return;\n  }\n\n  const fullUrl = new URL(link, window.location.href);\n  const messageSent = postUniversalMessage(\n    new ClickLink(fullUrl.toString(), targetType === LINK_TARGET_TYPE.NEW_WINDOW),\n  );\n\n  if (messageSent !== false) {\n    e.preventDefault();\n  }\n}\n\nexport default function enableRouter() {\n  document.addEventListener('click', clickEventHandler, false);\n}\n","import { postUniversalMessage } from './post-message.js';\nimport ClickLink from './messages/click-link.js';\nimport RequestResize from './messages/request-resize.js';\nimport enableRouter from './router.js';\nimport Message from './messages/message.js';\n\nconst MESSAGES = {\n  REQUEST_CLOSE: 'request-close',\n  REQUEST_SYNC: 'request-sync',\n  REQUEST_REFRESH: 'request-refresh',\n  PING: 'ping',\n  READY: 'ready',\n};\n\n/**\n * request that the frame is closed\n */\nfunction requestClose() {\n  postUniversalMessage(new Message(MESSAGES.REQUEST_CLOSE));\n}\n\n/**\n * request that the host perform a sync\n */\nfunction requestSync() {\n  postUniversalMessage(new Message(MESSAGES.REQUEST_SYNC));\n}\n\n/**\n * request that the host perform a refresh of the component\n */\nfunction requestRefresh() {\n  postUniversalMessage(new Message(MESSAGES.REQUEST_REFRESH));\n}\n\n/**\n * ping the host. In Online, triggers the activity monitor.\n */\nfunction ping() {\n  postUniversalMessage(new Message(MESSAGES.PING));\n}\n\n/**\n * request that the host perform a resize\n * @param {number} height\n */\n\nfunction requestResize(height) {\n  postUniversalMessage(new RequestResize(height));\n}\n\n/**\n * tell the host we're \"ready\". Typically used to allow the host to handle an initial loading screen.\n */\nfunction ready() {\n  postUniversalMessage(new Message(MESSAGES.READY));\n}\n\n/**\n * handle clicking internal route hrefs\n * @param {Event} e\n */\nfunction handleClick(e) {\n  const event = /** @type {!CustomEvent} */ (e);\n  event.detail.originalEvent.preventDefault();\n  postUniversalMessage(new ClickLink(event.detail.href));\n}\n\n// we should only add these listeners if we are running in an iframe (Online)\n// eslint-disable-next-line no-restricted-globals\nif (window !== top) {\n  document.addEventListener('click-link', handleClick, false);\n  // listen for user activity and ping host for session keep-alive in Online\n  const onActivity_ = () => {\n    ping();\n  };\n\n  const onFocus_ = () => {\n    if (document.hidden === false) {\n      ping();\n    }\n  };\n  document.addEventListener('mousedown', onActivity_, { passive: true });\n  document.addEventListener('keydown', onActivity_, { passive: true });\n  document.addEventListener('visibilitychange', onFocus_, { passive: true });\n}\n\n/** just enough event dispatcher. EventTarget isn't widely supported enough (safari and IE11) */\nclass EventDispatcher {\n  constructor() {\n    this.listeners = {};\n  }\n\n  /**\n   * @param {!string} eventName\n   * @param {function(Event?):void} callback\n   */\n  addEventListener(eventName, callback) {\n    this.listeners[eventName] = this.listeners[eventName]\n      ? this.listeners[eventName].concat([callback])\n      : [callback];\n  }\n\n  /**\n   * @param {!string} eventName\n   * @param {function(Event?):void} callback\n   */\n  removeEventListener(eventName, callback) {\n    this.listeners[eventName] = this.listeners[eventName].filter(cb => cb !== callback);\n  }\n\n  /**\n   *\n   * @param {Event} event\n   * @return {boolean}\n   */\n  dispatchEvent(event) {\n    const { type } = event;\n    // does NOT handle stopPropagation/stopImmediatePropagation\n    (this.listeners[type] || []).forEach(listener => listener(event));\n    return !event.defaultPrevented;\n  }\n}\n\n/** @type {EventDispatcher} */\nconst host = new EventDispatcher();\n\n/** @type {!Object<string, string>} */\nconst HOST_EVENTS = {\n  HISTORY_BACK: 'history-back',\n  HISTORY_FORWARD: 'history-forward',\n};\n\n// listen for messages from our host and relay as events\nwindow.addEventListener('message', event => {\n  host.dispatchEvent(new CustomEvent(event.data.type, { detail: event.data.data }));\n});\n\nexport {\n  requestClose,\n  requestSync,\n  requestResize,\n  requestRefresh,\n  postUniversalMessage,\n  ping,\n  ready,\n  host,\n  HOST_EVENTS,\n  enableRouter,\n};\n","/* eslint-disable dot-notation, no-multi-assign */\n\nimport {\n  requestClose,\n  requestSync,\n  postUniversalMessage,\n  ping,\n  ready,\n  requestResize,\n  host,\n  HOST_EVENTS,\n  enableRouter,\n} from './index.js';\n\next['requestClose'] = requestClose;\next['requestSync'] = requestSync;\next['postUniversalMessage'] = postUniversalMessage;\next['ping'] = ping;\next['ready'] = ready;\next['requestResize'] = requestResize;\next['host'] = host;\next['HOST_EVENTS'] = HOST_EVENTS;\next['enableRouter'] = enableRouter;\n"]}